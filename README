🛠 1️⃣ Setup & Core Structure

This step will establish the foundation of your project.
📂 1.1 Create the Core Files & Directories

Create the following directory structure:

/MiniOS
│── src/
│   ├── main.cpp
│   ├── ProcessManager.cpp
│   ├── FileManager.cpp
│   ├── Scheduler.cpp
│   ├── CLI.cpp
│── include/
│   ├── ProcessManager.h
│   ├── FileManager.h
│   ├── Scheduler.h
│   ├── CLI.h
│── Makefile (optional)

📌 Why? This keeps your project organized and modular.
📌 1.2 Implement the Process Manager (Header File)
🔹 Create include/ProcessManager.h

    Define a Process struct with:
    ✅ int pid (Process ID)
    ✅ std::string name
    ✅ int priority
    ✅ std::string status (Running, Stopped, Terminated)

    Define a ProcessManager class with:
    ✅ std::vector<Process> (to store active processes)
    ✅ Methods:
        createProcess(std::string name, int priority)
        listProcesses()
        killProcess(int pid)

📌 1.3 Implement the File System Manager (Header File)
🔹 Create include/FileManager.h

    Define a File struct with:
    ✅ std::string name
    ✅ std::string content
    ✅ int size

    Define a FileManager class with:
    ✅ std::map<std::string, File> (to store virtual files)
    ✅ Methods:
        createFile(std::string filename)
        writeFile(std::string filename, std::string content)
        readFile(std::string filename)
        deleteFile(std::string filename)

📌 1.4 Implement the Task Scheduler (Header File)
🔹 Create include/Scheduler.h

    Define a TaskScheduler class with:
    ✅ std::queue<int> (process queue)
    ✅ Methods:
        scheduleTask(int pid)
        executeNextTask()

📌 1.5 Implement the Command Line Interface (CLI)
🔹 Create include/CLI.h

    Define a CLI class with:
    ✅ void run() (to keep taking user commands)
    ✅ void processCommand(std::string command)

📌 1.6 Implement the main.cpp
🔹 Create src/main.cpp

    Initialize ProcessManager, FileManager, Scheduler, and CLI
    Call CLI.run() to start the OS simulation

✅ Summary of Tasks

✔️ Create directory structure
✔️ Define ProcessManager class (process handling)
✔️ Define FileManager class (file handling)
✔️ Define Scheduler class (task scheduling)
✔️ Define CLI class (user command processing)
✔️ Create main.cpp to initialize everything
